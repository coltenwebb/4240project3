# Generated from Example.g4 by ANTLR 4.9.3
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\61")
        buf.write("\u0126\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3")
        buf.write("\3\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6")
        buf.write("\3\7\3\7\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3")
        buf.write("\n\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3")
        buf.write("\r\3\16\3\16\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\21\3")
        buf.write("\21\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\24\3\24")
        buf.write("\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\27\3\27")
        buf.write("\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\31\3\31")
        buf.write("\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\33\3\33")
        buf.write("\3\33\3\33\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\36\3\36")
        buf.write("\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37")
        buf.write("\3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3%\3&\3&\3\'\3")
        buf.write("\'\3(\3(\3(\3)\3)\3)\3*\3*\3+\3+\3,\6,\u00fb\n,\r,\16")
        buf.write(",\u00fc\3,\7,\u0100\n,\f,\16,\u0103\13,\3-\6-\u0106\n")
        buf.write("-\r-\16-\u0107\3.\3.\3.\7.\u010d\n.\f.\16.\u0110\13.\3")
        buf.write("/\6/\u0113\n/\r/\16/\u0114\3/\3/\3\60\3\60\3\60\3\60\7")
        buf.write("\60\u011d\n\60\f\60\16\60\u0120\13\60\3\60\3\60\3\60\3")
        buf.write("\60\3\60\3\u011e\2\61\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21")
        buf.write("\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24")
        buf.write("\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37")
        buf.write("= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61\3\2\6\4\2C")
        buf.write("\\c|\6\2\62;C\\aac|\3\2\62;\5\2\13\f\17\17\"\"\2\u012b")
        buf.write("\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13")
        buf.write("\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3")
        buf.write("\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2")
        buf.write("\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2")
        buf.write("%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2")
        buf.write("\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67")
        buf.write("\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2")
        buf.write("A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2")
        buf.write("\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2")
        buf.write("\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2")
        buf.write("\2\2\2_\3\2\2\2\3a\3\2\2\2\5f\3\2\2\2\7j\3\2\2\2\tm\3")
        buf.write("\2\2\2\13s\3\2\2\2\rw\3\2\2\2\17{\3\2\2\2\21}\3\2\2\2")
        buf.write("\23\177\3\2\2\2\25\u0088\3\2\2\2\27\u008a\3\2\2\2\31\u008c")
        buf.write("\3\2\2\2\33\u0092\3\2\2\2\35\u0094\3\2\2\2\37\u0096\3")
        buf.write("\2\2\2!\u0099\3\2\2\2#\u009d\3\2\2\2%\u00a3\3\2\2\2\'")
        buf.write("\u00a5\3\2\2\2)\u00a8\3\2\2\2+\u00ab\3\2\2\2-\u00b0\3")
        buf.write("\2\2\2/\u00b6\3\2\2\2\61\u00bb\3\2\2\2\63\u00c1\3\2\2")
        buf.write("\2\65\u00c4\3\2\2\2\67\u00ca\3\2\2\29\u00ce\3\2\2\2;\u00d1")
        buf.write("\3\2\2\2=\u00d7\3\2\2\2?\u00de\3\2\2\2A\u00e0\3\2\2\2")
        buf.write("C\u00e2\3\2\2\2E\u00e4\3\2\2\2G\u00e6\3\2\2\2I\u00e8\3")
        buf.write("\2\2\2K\u00eb\3\2\2\2M\u00ed\3\2\2\2O\u00ef\3\2\2\2Q\u00f2")
        buf.write("\3\2\2\2S\u00f5\3\2\2\2U\u00f7\3\2\2\2W\u00fa\3\2\2\2")
        buf.write("Y\u0105\3\2\2\2[\u0109\3\2\2\2]\u0112\3\2\2\2_\u0118\3")
        buf.write("\2\2\2ab\7o\2\2bc\7c\2\2cd\7k\2\2de\7p\2\2e\4\3\2\2\2")
        buf.write("fg\7n\2\2gh\7g\2\2hi\7v\2\2i\6\3\2\2\2jk\7k\2\2kl\7p\2")
        buf.write("\2l\b\3\2\2\2mn\7d\2\2no\7g\2\2op\7i\2\2pq\7k\2\2qr\7")
        buf.write("p\2\2r\n\3\2\2\2st\7g\2\2tu\7p\2\2uv\7f\2\2v\f\3\2\2\2")
        buf.write("wx\7x\2\2xy\7c\2\2yz\7t\2\2z\16\3\2\2\2{|\7<\2\2|\20\3")
        buf.write("\2\2\2}~\7=\2\2~\22\3\2\2\2\177\u0080\7h\2\2\u0080\u0081")
        buf.write("\7w\2\2\u0081\u0082\7p\2\2\u0082\u0083\7e\2\2\u0083\u0084")
        buf.write("\7v\2\2\u0084\u0085\7k\2\2\u0085\u0086\7q\2\2\u0086\u0087")
        buf.write("\7p\2\2\u0087\24\3\2\2\2\u0088\u0089\7*\2\2\u0089\26\3")
        buf.write("\2\2\2\u008a\u008b\7+\2\2\u008b\30\3\2\2\2\u008c\u008d")
        buf.write("\7c\2\2\u008d\u008e\7t\2\2\u008e\u008f\7t\2\2\u008f\u0090")
        buf.write("\7c\2\2\u0090\u0091\7{\2\2\u0091\32\3\2\2\2\u0092\u0093")
        buf.write("\7]\2\2\u0093\34\3\2\2\2\u0094\u0095\7_\2\2\u0095\36\3")
        buf.write("\2\2\2\u0096\u0097\7q\2\2\u0097\u0098\7h\2\2\u0098 \3")
        buf.write("\2\2\2\u0099\u009a\7k\2\2\u009a\u009b\7p\2\2\u009b\u009c")
        buf.write("\7v\2\2\u009c\"\3\2\2\2\u009d\u009e\7h\2\2\u009e\u009f")
        buf.write("\7n\2\2\u009f\u00a0\7q\2\2\u00a0\u00a1\7c\2\2\u00a1\u00a2")
        buf.write("\7v\2\2\u00a2$\3\2\2\2\u00a3\u00a4\7.\2\2\u00a4&\3\2\2")
        buf.write("\2\u00a5\u00a6\7<\2\2\u00a6\u00a7\7?\2\2\u00a7(\3\2\2")
        buf.write("\2\u00a8\u00a9\7k\2\2\u00a9\u00aa\7h\2\2\u00aa*\3\2\2")
        buf.write("\2\u00ab\u00ac\7v\2\2\u00ac\u00ad\7j\2\2\u00ad\u00ae\7")
        buf.write("g\2\2\u00ae\u00af\7p\2\2\u00af,\3\2\2\2\u00b0\u00b1\7")
        buf.write("g\2\2\u00b1\u00b2\7p\2\2\u00b2\u00b3\7f\2\2\u00b3\u00b4")
        buf.write("\7k\2\2\u00b4\u00b5\7h\2\2\u00b5.\3\2\2\2\u00b6\u00b7")
        buf.write("\7g\2\2\u00b7\u00b8\7n\2\2\u00b8\u00b9\7u\2\2\u00b9\u00ba")
        buf.write("\7g\2\2\u00ba\60\3\2\2\2\u00bb\u00bc\7y\2\2\u00bc\u00bd")
        buf.write("\7j\2\2\u00bd\u00be\7k\2\2\u00be\u00bf\7n\2\2\u00bf\u00c0")
        buf.write("\7g\2\2\u00c0\62\3\2\2\2\u00c1\u00c2\7f\2\2\u00c2\u00c3")
        buf.write("\7q\2\2\u00c3\64\3\2\2\2\u00c4\u00c5\7g\2\2\u00c5\u00c6")
        buf.write("\7p\2\2\u00c6\u00c7\7f\2\2\u00c7\u00c8\7f\2\2\u00c8\u00c9")
        buf.write("\7q\2\2\u00c9\66\3\2\2\2\u00ca\u00cb\7h\2\2\u00cb\u00cc")
        buf.write("\7q\2\2\u00cc\u00cd\7t\2\2\u00cd8\3\2\2\2\u00ce\u00cf")
        buf.write("\7v\2\2\u00cf\u00d0\7q\2\2\u00d0:\3\2\2\2\u00d1\u00d2")
        buf.write("\7d\2\2\u00d2\u00d3\7t\2\2\u00d3\u00d4\7g\2\2\u00d4\u00d5")
        buf.write("\7c\2\2\u00d5\u00d6\7m\2\2\u00d6<\3\2\2\2\u00d7\u00d8")
        buf.write("\7t\2\2\u00d8\u00d9\7g\2\2\u00d9\u00da\7v\2\2\u00da\u00db")
        buf.write("\7w\2\2\u00db\u00dc\7t\2\2\u00dc\u00dd\7p\2\2\u00dd>\3")
        buf.write("\2\2\2\u00de\u00df\7-\2\2\u00df@\3\2\2\2\u00e0\u00e1\7")
        buf.write("/\2\2\u00e1B\3\2\2\2\u00e2\u00e3\7,\2\2\u00e3D\3\2\2\2")
        buf.write("\u00e4\u00e5\7\61\2\2\u00e5F\3\2\2\2\u00e6\u00e7\7?\2")
        buf.write("\2\u00e7H\3\2\2\2\u00e8\u00e9\7>\2\2\u00e9\u00ea\7@\2")
        buf.write("\2\u00eaJ\3\2\2\2\u00eb\u00ec\7>\2\2\u00ecL\3\2\2\2\u00ed")
        buf.write("\u00ee\7@\2\2\u00eeN\3\2\2\2\u00ef\u00f0\7>\2\2\u00f0")
        buf.write("\u00f1\7?\2\2\u00f1P\3\2\2\2\u00f2\u00f3\7@\2\2\u00f3")
        buf.write("\u00f4\7?\2\2\u00f4R\3\2\2\2\u00f5\u00f6\7(\2\2\u00f6")
        buf.write("T\3\2\2\2\u00f7\u00f8\7~\2\2\u00f8V\3\2\2\2\u00f9\u00fb")
        buf.write("\t\2\2\2\u00fa\u00f9\3\2\2\2\u00fb\u00fc\3\2\2\2\u00fc")
        buf.write("\u00fa\3\2\2\2\u00fc\u00fd\3\2\2\2\u00fd\u0101\3\2\2\2")
        buf.write("\u00fe\u0100\t\3\2\2\u00ff\u00fe\3\2\2\2\u0100\u0103\3")
        buf.write("\2\2\2\u0101\u00ff\3\2\2\2\u0101\u0102\3\2\2\2\u0102X")
        buf.write("\3\2\2\2\u0103\u0101\3\2\2\2\u0104\u0106\t\4\2\2\u0105")
        buf.write("\u0104\3\2\2\2\u0106\u0107\3\2\2\2\u0107\u0105\3\2\2\2")
        buf.write("\u0107\u0108\3\2\2\2\u0108Z\3\2\2\2\u0109\u010a\t\4\2")
        buf.write("\2\u010a\u010e\7\60\2\2\u010b\u010d\t\4\2\2\u010c\u010b")
        buf.write("\3\2\2\2\u010d\u0110\3\2\2\2\u010e\u010c\3\2\2\2\u010e")
        buf.write("\u010f\3\2\2\2\u010f\\\3\2\2\2\u0110\u010e\3\2\2\2\u0111")
        buf.write("\u0113\t\5\2\2\u0112\u0111\3\2\2\2\u0113\u0114\3\2\2\2")
        buf.write("\u0114\u0112\3\2\2\2\u0114\u0115\3\2\2\2\u0115\u0116\3")
        buf.write("\2\2\2\u0116\u0117\b/\2\2\u0117^\3\2\2\2\u0118\u0119\7")
        buf.write("\61\2\2\u0119\u011a\7,\2\2\u011a\u011e\3\2\2\2\u011b\u011d")
        buf.write("\13\2\2\2\u011c\u011b\3\2\2\2\u011d\u0120\3\2\2\2\u011e")
        buf.write("\u011f\3\2\2\2\u011e\u011c\3\2\2\2\u011f\u0121\3\2\2\2")
        buf.write("\u0120\u011e\3\2\2\2\u0121\u0122\7,\2\2\u0122\u0123\7")
        buf.write("\61\2\2\u0123\u0124\3\2\2\2\u0124\u0125\b\60\2\2\u0125")
        buf.write("`\3\2\2\2\t\2\u00fc\u0101\u0107\u010e\u0114\u011e\3\b")
        buf.write("\2\2")
        return buf.getvalue()


class ExampleLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    ID = 43
    INTLIT = 44
    FLOATLIT = 45
    WS = 46
    COMMENT = 47

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'main'", "'let'", "'in'", "'begin'", "'end'", "'var'", "':'", 
            "';'", "'function'", "'('", "')'", "'array'", "'['", "']'", 
            "'of'", "'int'", "'float'", "','", "':='", "'if'", "'then'", 
            "'endif'", "'else'", "'while'", "'do'", "'enddo'", "'for'", 
            "'to'", "'break'", "'return'", "'+'", "'-'", "'*'", "'/'", "'='", 
            "'<>'", "'<'", "'>'", "'<='", "'>='", "'&'", "'|'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "INTLIT", "FLOATLIT", "WS", "COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "ID", "INTLIT", "FLOATLIT", 
                  "WS", "COMMENT" ]

    grammarFileName = "Example.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.3")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


